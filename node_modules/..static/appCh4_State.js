'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var contentNode = document.getElementById('contents');

var OrderFilter = function (_React$Component) {
    _inherits(OrderFilter, _React$Component);

    function OrderFilter() {
        _classCallCheck(this, OrderFilter);

        return _possibleConstructorReturn(this, (OrderFilter.__proto__ || Object.getPrototypeOf(OrderFilter)).apply(this, arguments));
    }

    _createClass(OrderFilter, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                null,
                ' This is a placeholder for Order Filter. '
            );
        }
    }]);

    return OrderFilter;
}(React.Component);

var OrderRow = function (_React$Component2) {
    _inherits(OrderRow, _React$Component2);

    function OrderRow() {
        _classCallCheck(this, OrderRow);

        return _possibleConstructorReturn(this, (OrderRow.__proto__ || Object.getPrototypeOf(OrderRow)).call(this));
    }

    _createClass(OrderRow, [{
        key: 'render',
        value: function render() {
            var order = this.order; //define order from parent
            OrderRow.defaultProps = { //defaults for significant values not provided in the object
                CompletedDate: 'N/A',
                Total: 'In Review'
            };

            return React.createElement(
                'tr',
                null,
                React.createElement(
                    'td',
                    null,
                    order.id
                ),
                React.createElement(
                    'td',
                    null,
                    order.status,
                    ' '
                ),
                React.createElement(
                    'td',
                    null,
                    order.user
                ),
                React.createElement(
                    'td',
                    null,
                    order.DateCreated.toDateString()
                ),
                React.createElement(
                    'td',
                    null,
                    order.Total
                ),
                React.createElement(
                    'td',
                    null,
                    order.CompletedDate ? order.CompletedDate.toDateString() : OrderRow.defaultProps.CompletedDate
                ),
                React.createElement(
                    'td',
                    null,
                    order.Title
                )
            );
        }
    }]);

    return OrderRow;
}(React.Component); //end OrderRow


var OrderTable = function (_React$Component3) {
    _inherits(OrderTable, _React$Component3);

    function OrderTable() {
        _classCallCheck(this, OrderTable);

        return _possibleConstructorReturn(this, (OrderTable.__proto__ || Object.getPrototypeOf(OrderTable)).call(this));
    }

    _createClass(OrderTable, [{
        key: 'render',
        value: function render() {
            var orderRows = this.orders.map(function (order) {
                return (
                    /*component*/React.createElement(OrderRow, { key: order.id, order: order })
                );
            }); //order is the value that '.map' passes on
            return React.createElement(
                'table',
                { className: 'bordered-table' },
                React.createElement(
                    'thead',
                    null,
                    React.createElement(
                        'tr',
                        null,
                        React.createElement(
                            'th',
                            null,
                            'ID'
                        ),
                        React.createElement(
                            'th',
                            null,
                            'Status'
                        ),
                        React.createElement(
                            'th',
                            null,
                            'User'
                        ),
                        React.createElement(
                            'th',
                            null,
                            'DateCreated'
                        ),
                        React.createElement(
                            'th',
                            null,
                            'Total'
                        ),
                        React.createElement(
                            'th',
                            null,
                            'CompletedDate'
                        ),
                        React.createElement(
                            'th',
                            null,
                            'Title'
                        )
                    )
                ),
                React.createElement(
                    'tbody',
                    null,
                    orderRows
                )
            );
        }
    }]);

    return OrderTable;
}(React.Component);

var OrderAdd = function (_React$Component4) {
    _inherits(OrderAdd, _React$Component4);

    function OrderAdd() {
        _classCallCheck(this, OrderAdd);

        var _this4 = _possibleConstructorReturn(this, (OrderAdd.__proto__ || Object.getPrototypeOf(OrderAdd)).call(this));

        _this4.handleSubmit = _this4.handleSubmit.bind(_this4);
        return _this4;
    }

    _createClass(OrderAdd, [{
        key: 'handleSubmit',
        value: function handleSubmit(e) {
            e.preventDefault();
            var form = document.forms.orderAdd;
            this.props.createOrder({
                owner: form.owner.value,
                title: form.title.value,
                status: "New",
                created: new Date()
            });

            //clear text fields
            form.owner.value = "";form.title.value = "";
        }
    }, {
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                null,
                React.createElement(
                    'form',
                    { name: 'orderAdd', onSubmit: this.handleSubmit },
                    React.createElement('input', { type: 'text', name: 'owner', placeholder: 'Owner' }),
                    React.createElement('input', { type: 'text', name: 'title', placeholder: 'Title' }),
                    React.createElement(
                        'button',
                        null,
                        'Add'
                    )
                )
            );
        }
    }]);

    return OrderAdd;
}(React.Component); //end OrderAdd


//database**


var orders = [{
    id: 1, status: 'Pro cessing', user: 'Chris88', DateCreated: new Date('2017-10-09'),
    Total: 114.98, CompletedDate: undefined, Title: 'Roll Tide Roll'
}, {
    id: 2, status: 'completed', user: 'bvail1', DateCreated: new Date('2017-09-21'),
    Total: 215.66, CompletedDate: new Date('2017-10-01'), Title: 'VailSummit'
}];

var OrderList = function (_React$Component5) {
    _inherits(OrderList, _React$Component5);

    //list of objects for the UI
    function OrderList() {
        _classCallCheck(this, OrderList);

        var _this5 = _possibleConstructorReturn(this, (OrderList.__proto__ || Object.getPrototypeOf(OrderList)).call(this));

        _this5.state = { orders: [] };

        _this5.createOrder = _this5.createOrder.bind(_this5);
        return _this5;
    } //end constructor

    _createClass(OrderList, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.loadData();
        }
    }, {
        key: 'loadData',
        value: function loadData() {
            var _this6 = this;

            setTimeout(function () {
                _this6.setState({ orders: orders });
            }, 500);
        }
    }, {
        key: 'createOrder',
        value: function createOrder(newOrder) {
            var newOrders = this.state.orders.slice();
            newOrder.id = this.state.orders.length + 1; //auto increment the new orderID for the rendering in the DOM
            newOrders.push(newOrder);
            this.setState({ orders: newOrders });
            this.render();
        } //end createOrder     

    }, {
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                null,
                React.createElement(OrderFilter, null),
                React.createElement('hr', null),
                React.createElement(OrderTable, { orders: this.state.orders }),
                React.createElement('hr', null),
                React.createElement(OrderAdd, { createOrder: this.createOrder })
            );
        }
    }]);

    return OrderList;
}(React.Component);

ReactDOM.render(React.createElement(OrderList, null), contentNode); //render the component inside the content node