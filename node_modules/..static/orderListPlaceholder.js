"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var contentNode = document.getElementById("contents");

var OrderFilter = function (_React$Component) {
    _inherits(OrderFilter, _React$Component);

    function OrderFilter() {
        _classCallCheck(this, OrderFilter);

        return _possibleConstructorReturn(this, (OrderFilter.__proto__ || Object.getPrototypeOf(OrderFilter)).apply(this, arguments));
    }

    _createClass(OrderFilter, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                "This is a placeholder for OrderFilter "
            );
        }
    }]);

    return OrderFilter;
}(React.Component);

var OrderTable = function (_React$Component2) {
    _inherits(OrderTable, _React$Component2);

    function OrderTable() {
        _classCallCheck(this, OrderTable);

        return _possibleConstructorReturn(this, (OrderTable.__proto__ || Object.getPrototypeOf(OrderTable)).apply(this, arguments));
    }

    _createClass(OrderTable, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                "This is a placeholder for OrderTable"
            );
        }
    }]);

    return OrderTable;
}(React.Component);

var OrderAdd = function (_React$Component3) {
    _inherits(OrderAdd, _React$Component3);

    function OrderAdd() {
        _classCallCheck(this, OrderAdd);

        return _possibleConstructorReturn(this, (OrderAdd.__proto__ || Object.getPrototypeOf(OrderAdd)).apply(this, arguments));
    }

    _createClass(OrderAdd, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                "This is a Placeholder for OrderAdd"
            );
        }
    }]);

    return OrderAdd;
}(React.Component);

var OrderList = function (_React$Component4) {
    _inherits(OrderList, _React$Component4);

    function OrderList() {
        _classCallCheck(this, OrderList);

        return _possibleConstructorReturn(this, (OrderList.__proto__ || Object.getPrototypeOf(OrderList)).apply(this, arguments));
    }

    _createClass(OrderList, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                React.createElement(
                    "h1",
                    null,
                    "Order Page"
                ),
                React.createElement(OrderFilter, null),
                React.createElement("hr", null),
                React.createElement(OrderTable, null),
                React.createElement("hr", null),
                React.createElement(OrderAdd, null)
            );
        }
    }]);

    return OrderList;
}(React.Component);

ReactDOM.render(React.createElement(OrderList, null), contentNode); //render the component inside the content node